import {
  createPostResponse,
  createActionHeaders,
  ActionPostResponse,
  ActionGetResponse,
  ActionPostRequest,
} from '@solana/actions';
import {
  clusterApiUrl,
  Connection,
  LAMPORTS_PER_SOL,
  PublicKey,
  Keypair,
  SystemProgram,
  Transaction,
  sendAndConfirmTransaction,
} from '@solana/web3.js';

import "dotenv/config";
import { getKeypairFromEnvironment } from "@solana-developers/helpers";

const keypair = getKeypairFromEnvironment("SECRET_KEY");

const senderSecretKey_ = keypair.secretKey;
const headers = createActionHeaders();
let icon_ = 'https://i.ibb.co/8sBLh90/superteam.png';

export const GET = async (req: Request) {
  try{
    const requestUrl = new URL(req.url);

    const baseHref = new URL (
      /api/actions/superteam?,
      requestUrl.origin,
    ).toString();
    
    const payload: ActionGetResponse = {
      type: 'action',
      title: 'SolÏ† Superteam Advertisement',
      icon: icon_,
      description:
        'Earn SOL by watchin ads.',
      label: 'Transfer',
      links: {
        actions: [
          {
            label: 'Send',
            href: ${baseHref}receiverWallet={receiverWallet},
            paremeters: [
              {
                name: 'receiverWallet',
                label: 'Receiver Wallet',
                required: true,
              },
            ],
          },
        ],
      },
    };

    return Response.json(payload,{
      headers,
    });
  } catch(err){
    console.log(err);
    let message = "An unknown error!!!";
    if(typeof err=='string') message == err;
    return new Response{message, {
      status: 400,
      headers,
    }};
  }
};

export const OPTIONS = async (req: Request) => {
  return new Response(null, {headers});
};